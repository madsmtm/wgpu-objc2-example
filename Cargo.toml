[package]
name = "wgpu-objc2-example"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
publish = false

[package.metadata.bundle]
identifier = "com.example.wgpu-objc2-example"

# I'm using the `all` feature here because I'm lazy, and it's easier when developing
[dependencies]
wgpu = "0.20.0"
pollster = "0.3.0"
objc2 = "0.5.2"
objc2-foundation = { version = "0.2.2", features = ["all"] }
objc2-quartz-core = { version = "0.2.2", features = ["all"] }

[target.'cfg(target_os = "macos")'.dependencies]
objc2-app-kit = { version = "0.2.2", features = ["all"] }

[target.'cfg(not(target_os = "macos"))'.dependencies]
objc2-ui-kit = { version = "0.2.2", features = ["all"] }

[features]
# Whether to redraw when resizing the layer, to test things out.
hacky-redraw = []

# Whether to trigger `drawRect:` instead of `updateLayer`.
#
# Only relevant in AppKit - this is always enabled when using UIKit.
draw-rect = []

# Whether to use in-development WGPU with breaking changes.
wgpu-unstable = []

# Whether to request redraws using CADisplayLink
display-link = []

# Uncomment the below to use a development version WGPU.
# default = ["wgpu-unstable"]
# [patch.crates-io]
# wgpu = { path = "../wgpu/wgpu" }
