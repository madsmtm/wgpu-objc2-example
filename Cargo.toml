[package]
name = "wgpu-objc2-example"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
publish = false

[package.metadata.bundle]
identifier = "com.example.wgpu-objc2-example"

# I'm using the `all` feature here because I'm lazy, and it's easier when developing.
[dependencies]
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
wgpu = "0.20.0"
pollster = "0.3.0"
core-foundation = "0.9.4"
block2 = "0.5.1"
objc2 = "0.5.2"
objc2-foundation = { version = "0.2.2", features = ["all", "block2"] }
objc2-quartz-core = { version = "0.2.2", features = ["all"] }

[target.'cfg(target_os = "macos")'.dependencies]
objc2-app-kit = { version = "0.2.2", features = ["all"] }

[target.'cfg(not(target_os = "macos"))'.dependencies]
objc2-ui-kit = { version = "0.2.2", features = ["all"] }

[features]
# Redraw immediately when resizing or when stepping.
immediate-redraw = []

# Set the view as needing display immediately after drawing.
queue-display = []

# Trigger `drawRect:` instead of `updateLayer`.
#
# Only relevant in AppKit - this is always enabled when using UIKit.
draw-rect = []

# Request redraws using `CADisplayLink`.
display-link = []

# Disable VSync (i.e. use `wgpu::PresentMode::Immediate`).
no-vsync = []

# Use in-development `wgpu` with breaking changes.
wgpu-unstable = []

# Uncomment the below to use a development version WGPU.
# default = ["wgpu-unstable"]
# [patch.crates-io]
# wgpu = { path = "../wgpu/wgpu" }
